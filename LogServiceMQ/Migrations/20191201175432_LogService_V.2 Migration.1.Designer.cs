// <auto-generated />
using System;
using LogService.MyDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogService.Migrations
{
    [DbContext(typeof(LogDbContext))]
    [Migration("20191201175432_LogService_V.2 Migration.1")]
    partial class LogService_V2Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogService.DomainClasses.LogInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LogDate")
                        .HasColumnName("LogInsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogInfoMessage")
                        .IsRequired()
                        .HasColumnName("LogInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("LogInfos");
                });

            modelBuilder.Entity("LogService.DomainClasses.ProjectInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qeueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProjectInfos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Password = "admin",
                            ProjectCode = "code",
                            qeueName = "queue"
                        });
                });

            modelBuilder.Entity("LogService.DomainClasses.ProjectOwner", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsRequestEmail")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("OwnerID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ProjectOwners");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "hacimu@gmail.com",
                            IsRequestEmail = true,
                            ProjectID = 1
                        });
                });

            modelBuilder.Entity("LogService.DomainClasses.LogInfo", b =>
                {
                    b.HasOne("LogService.DomainClasses.ProjectInfo", "ProjectInfo")
                        .WithMany("LogInfos")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogService.DomainClasses.ProjectOwner", b =>
                {
                    b.HasOne("LogService.DomainClasses.ProjectInfo", "ProjectInfo")
                        .WithMany("ProjectOwners")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
