@model B_Commerce.SMVC.Areas.Admin.Models.ProductModel


@using B_Commerce.SMVC.MyResource;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section scripts
{
    <link href="https://cdn.jsdelivr.net/npm/froala-editor@3.0.6/css/froala_editor.pkgd.min.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/froala-editor@3.0.6/js/froala_editor.pkgd.min.js"></script>
    <script src="~/Areas/Admin/Scripts/CategorySelectBox/CategorySelect.js"></script>
    <link href="~/Areas/Admin/Scripts/CategorySelectBox/CategorySelect.css" rel="stylesheet" />


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#myList li").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
    <script>
        var editor = new FroalaEditor('#Description');
        var catselectHelper;

        $(function () {

            $.ajax({

                url: "/Admin/CategoryBrain/GetAllCategories",
                method: "GET",
                success: function (d) {


                    catselectHelper = new categorySelect(d.categories, function (selectedid) {

                        $("#CategoryID").val(selectedid);
                    });
                    catselectHelper.createUI($("#categoryselect"));
                }
            })

        });

    </script>
}



@if (Model != null)
{
    using (Html.BeginForm("Update", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group">
            @Html.LabelFor(t => t.ProductName, new { @class = "badge badge-pill badge-primary" })

            @Html.TextBoxFor(t => t.ProductName, new { @class = "form-control", id = "#productName", value = $"{Model.ProductName}" })
        </div>
        <div class="form-group">
            @Html.LabelFor(t => t.Price, new { @class = "badge badge-pill badge-primary" })
            @Html.TextBoxFor(t => t.Price, new { @class = "form-control", id = "#productName", value = $"{Model.Price}" })
        </div>

        <div class="form-group">
            @Html.LabelFor(t => t.AvailableCount, new { @class = "badge badge-pill badge-primary" })
            @Html.TextBoxFor(t => t.AvailableCount, new { @class = "form-control", value = $"{Model.AvailableCount}" })
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(t => t.Description, new { @class = "badge badge-pill badge-primary" })
            </div>
            <div id="editor">
                @Html.TextAreaFor(t => t.Description, new { id = "Description", style = "display:none", name = "Description", value = $"{Model.Description}" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("LabelProductCategory", "Product Category", new { @class = "badge badge-pill badge-primary" })
            @Html.HiddenFor(t => t.CategoryID)<br />
            <input type="search" id="myInput" class="form-control" placeholder="Search">
            <div id="categoryselect">


            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.Label("LabelProductImage", "Product Image", new { @class = "badge badge-pill badge-primary" })
            </div>
            <input name="productfile" type="file" multiple class="fa-file-image-o" />



        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-secondary" value="@Resource.General_Update" />
        </div>}
}
else
{
    using (Html.BeginForm("Add", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group">
            @Html.LabelFor(t => t.ProductName, new { @class = "badge badge-pill badge-primary" })

            @Html.TextBoxFor(t => t.ProductName, new { @class = "form-control", id = "#productName", placeholder = "Ürün Adı" })
        </div>
        <div class="form-group">
            @Html.LabelFor(t => t.Price, new { @class = "badge badge-pill badge-primary" })
            @Html.TextBoxFor(t => t.Price, new { @class = "form-control", id = "#productName", placeholder = "Fiyat" })
        </div>

        <div class="form-group">
            @Html.LabelFor(t => t.AvailableCount, new { @class = "badge badge-pill badge-primary" })
            @Html.TextBoxFor(t => t.AvailableCount, new { @class = "form-control", placeholder = "Adet" })
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(t => t.Description, new { @class = "badge badge-pill badge-primary" })
            </div>
            <div id="editor">
                @Html.TextAreaFor(t => t.Description, new { id = "Description", style = "display:none", name = "Description" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("LabelProductCategory", "Product Category", new { @class = "badge badge-pill badge-primary" })
            @Html.HiddenFor(t => t.CategoryID)<br />
            <input type="search" id="myInput" class="form-control" placeholder="Search">
            <div id="categoryselect">


            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.Label("LabelProductImage", "Product Image", new { @class = "badge badge-pill badge-primary" })
            </div>
            <input name="productfile" type="file" multiple class="fa-file-image-o" />



        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-secondary" value="@Resource.General_Add" />
        </div>
    }
}


